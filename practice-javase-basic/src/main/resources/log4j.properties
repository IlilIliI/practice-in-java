#properties转xml地址:https://logback.qos.ch/translator/
#log4j.rootLogger = level,appenderName1,appenderName2, ...
log4j.rootLogger = INFO,logConsole,logFile,dailyRollFile,rollFile

#输出到控制台:ConsoleAppender
log4j.appender.logConsole = org.apache.log4j.ConsoleAppender
#log4j.appender.logConsole.Threshold = ERROR
log4j.appender.logConsole.layout = org.apache.log4j.PatternLayout
log4j.appender.logConsole.layout.ConversionPattern = [QC] %p [%t] %C.%M(line %L) : %m%n
# 直接输出，不进行缓存
log4j.appender.logConsole.ImmediateFlush = true
#默认是 System.out方式输出
log4j.appender.logConsole.Target = System.err


#输出到文件:FileAppender
log4j.appender.logFile = org.apache.log4j.FileAppender
#文件输出地址:默认是工程根目录
log4j.appender.logFile.File= logs/log4j_file
#log4j.appender.logFile.Threshold = INFO
log4j.appender.logFile.layout = org.apache.log4j.PatternLayout
log4j.appender.logFile.layout.ConversionPattern = [TC] %p [%t] %C.%M(line %L) : %m%n
# 默认为true，true表示往末尾追加，false在每次启动时进行覆盖
log4j.appender.logFile.Append = true

#每天产生一个日志文件:DailyRollingFileAppender
log4j.appender.dailyRollFile = org.apache.log4j.DailyRollingFileAppender
#log4j.appender.dailyRollFile.Threshold = ERROR
log4j.appender.dailyRollFile.File = logs/ERROR_log
# 默认为true，true表示往末尾追加，false在每次启动时进行覆盖
log4j.appender.dailyRollFile.Append = true
#直接输出，不进行缓存
log4j.appender.dailyRollFile.ImmediateFlush = true
#文件名称的格式
# ' . ' yyyy - MM: 每个月更新一个log日志
# ' . ' yyyy - ww: 每个星期更新一个log日志
# ' . ' yyyy - MM - dd:每天更新一个log日志
# ' . ' yyyy - MM - dd - a: 每天的午夜和正午更新一个log日志
# ' . ' yyyy - MM - dd - HH: 每小时更新一个log日志
# ' . ' yyyy - MM - dd - HH - mm: 每分钟更新一个 log 日志
log4j.appender.dailyRollFile.DatePattern = ' . ' yyyy - MM - dd
log4j.appender.dailyRollFile.layout = org.apache.log4j.PatternLayout
log4j.appender.dailyRollFile.layout.ConversionPattern = [TC] %p [%t] %C.%M(line %L) : %m%n


#文件大小到达指定尺寸的时候产生一个新的文件:RollingFileAppender
log4j.appender.rollFile = org.apache.log4j.RollingFileAppender
#log4j.appender.rollFile.Threshold = INFO
log4j.appender.rollFile.File = html_log.html
log4j.appender.rollFile.Append = true
# 默认为true，true表示往末尾追加，false在每次启动时进行覆盖
# 一个 log 文件的大小，超过这个大小就又会生成 1 个日志 # KB ，MB，GB
log4j.appender.rollFile.MaxFileSize = 1KB
# 超过最多保存MaxBackupIndex个文件备份,取决于MaxFileSize
log4j.appender.rollFile.MaxBackupIndex = 3
# 输出文件的格式:这里使用HTML形式输出,HTML页面定义在下面
log4j.appender.rollFile.layout =org.apache.log4j.HTMLLayout
#是否显示类名和行数
log4j.appender.rollFile.layout.LocationInfo = true
#html页面的 title 标题
log4j.appender.rollFile.layout.Title = \u8bf7\u6ce8\u610f\uff1a\u8fd9\u662f\u7cfb\u7edf\u65e5\u5fd7

############################## SampleLayout (包含日志信息的级别和信息字符串)##########
# log4j.appender.rollFile.layout = org.apache.log4j.SampleLayout
############################## PatternLayout (可以灵活地指定布局模式) ###############
# log4j.appender.rollFile.layout = org.apache.log4j.PatternLayout
# log4j.appender.rollFile.layout.ConversionPattern =% d % p [ % c] - % m % n % d
############################## HTMLLayout (以 HTML 表格形式布局) ###################
# log4j.appender.rollFile.layout = org.apache.log4j.XMLLayout
# log4j.appender.rollFile.layout.LocationInfo = true #是否显示类名和行数
############################## TTCCLayout (包含日志产生的时间、线程、类别等等信息)######
# log4j.appender.rollFile.layout = org.apache.log4j.TTCCLayout
# log4j.appender.rollFile.layout.DateFormat = ISO8601
#NULL, RELATIVE, ABSOLUTE, DATE or ISO8601.
# log4j.appender.rollFile.layout.TimeZoneID = GMT - 8 : 00
# log4j.appender.rollFile.layout.CategoryPrefixing = false ##默认为 true 打印类别名
# log4j.appender.rollFile.layout.ContextPrinting = false ##默认为 true 打印上下文信息
# log4j.appender.rollFile.layout.ThreadPrinting = false ##默认为 true 打印线程名
###################################################################################

#发送邮件:SMTPAppender
log4j.appender.MAIL = org.apache.log4j.net.SMTPAppender
log4j.appender.MAIL.Threshold = INFO
log4j.appender.MAIL.BufferSize = 10
log4j.appender.MAIL.From = yourmail@gmail.com
log4j.appender.MAIL.SMTPHost = smtp.gmail.com
log4j.appender.MAIL.Subject = Log4J Message
log4j.appender.MAIL.To = yourmail@gmail.com
log4j.appender.MAIL.layout = org.apache.log4j.PatternLayout
log4j.appender.MAIL.layout.ConversionPattern =%d - %c -%-4r [%t] %-5p %c %x - %m %n


#数据库:JDBCAppender
log4j.appender.DATABASE = org.apache.log4j.jdbc.JDBCAppender
log4j.appender.DATABASE.URL = jdbc:mysql://localhost/test
log4j.appender.DATABASE.driver = com.mysql.jdbc.Driver
log4j.appender.DATABASE.user = root
log4j.appender.DATABASE.password = 123123
log4j.appender.DATABASE.sql = INSERT INTO `sys_log` (title) VALUES ( '%d - %c %-5p %c %x - %m%n')
log4j.appender.DATABASE.layout = org.apache.log4j.PatternLayout
log4j.appender.DATABASE.layout.ConversionPattern =% d - % c -%- 4r [ % t] %- 5p % c % x- %m%n
#数据库的链接会有问题，可以重写 org.apache.log4j.jdbc.JDBCAppender 的 getConnection() 使用数 据库链接池去得链接，可以避免 insert 一条就链接一次数据库

